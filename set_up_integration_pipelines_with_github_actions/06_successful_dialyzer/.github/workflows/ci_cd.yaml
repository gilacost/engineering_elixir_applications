# START: dialyzer
# in ci_cd.yaml

# END: dialyzer
name: CI/CD Elixir

on:
  push:
  workflow_dispatch:

# START: dialyzer
jobs:
  ci:
    runs-on: ubuntu-latest
    name: Compile with mix test, format & dialyzer
    env:
      MIX_ENV: test
    steps:
    # END: dialyzer
      - uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1.17.3
        with:
          version-file: .tool-versions
          version-type: strict

      - name: Cache deps directory
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

# START: dialyzer
      - name: Cache plt files
        uses: actions/cache@v4
        env: 
          EX_OTP_VERSIONS: ${{ steps.setup-beam.outputs.elixir-version }}
          KEY_BASE: plt-${{ runner.os }}-${{ env.EX_OTP_VERSIONS }}
        with:
          path: |
            priv/plts
          key: |
            ${{ env.KEY_BASE }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ env.KEY_BASE }}-

# END: dialyzer
      - name: Get dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: mix deps.get

      - run: mix compile --warnings-as-errors

      - name: Run tests
        run: mix test --max-failures 1 --trace --warnings-as-errors

      - name: Check code is formatted
        run: mix format --check-formatted

# START: dialyzer
      - name: Dialyzer static analysis
        run: mix dialyzer --format github
# END: dialyzer
